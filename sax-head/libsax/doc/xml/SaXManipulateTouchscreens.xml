<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulateTouchscreens">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulateTouchscreens</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulateTouchscreens</refname>
<refpurpose>Set of Touch-Panel configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXManipulatePointers</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
    <itemizedlist>
    <listitem><para>
		<function>SaXManipulateTouchscreens</function> ( SaXImport*, int = 1 )
    </para></listitem>
    <listitem><para>
		QList&lt;QString&gt; <function>getPanelList</function> ( void )
    </para></listitem>
    <listitem><para>
		void <function>setTouchPanel</function> ( const QString&amp; )
    </para></listitem>
    <listitem><para>
		bool <function>isTouchpanel</function>  ( void )
    </para></listitem>
    </itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The touchscreen manipulator requires one import object (Pointers) to
become created. Once created the manipulator object is able to transform
a currently existing InputDevice into a touchpanel. In almost all cases
it is needed to create this InputDevice first which means there is the
need for the device manipulator as well. The following example 
demonstrate how to add a touch panel to the configuration.
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

int main (void) {
    SaXException().setDebug (true);
    QDict&lt;SaXImport&gt; section;
    int importID[] = {
        SAX_POINTERS,
        SAX_LAYOUT
    };
    printf ("Importing data...\n");
    SaXConfig* config = new SaXConfig;
    for (int id=0; id&lt;2; id++) {
        SaXImport* import = new SaXImport ( importID[id] );
        import -&gt; setSource ( SAX_SYSTEM_CONFIG );
        import -&gt; doImport();
        config -&gt; addImport (import);
        section.insert (
            import-&gt;getSectionName(),import
        );
    }
    printf ("Adding new pointer device... ");
    SaXManipulateDevices dev (
        section["Pointers"],section["Layout"]
    );
    int panelID = dev.addInputDevice (SAX_INPUT_TOUCHPANEL);
    printf ("ID: %d is [SAX_INPUT_TOUCHPANEL]: added\n",panelID);

    printf ("Setting up touchpanel data... ");
    SaXManipulateTouchscreens pointer (
        section["Pointers"]
    );
    if (pointer.selectPointer (panelID)) {
        QList&lt;QString&gt; panelList = pointer.getPanelList();
        QString* myPanel = panelList.at(0);
        pointer.setTouchPanel( *myPanel );
        printf ("TouchPanel: [%s] configured\n", myPanel-&gt;ascii());
    }
    printf ("writing configuration\n");
    config -&gt; setMode (SAX_MERGE);
    if ( ! config -&gt; createConfiguration() ) {
        printf ("%s\n",config-&gt;errorString().ascii());
        printf ("%s\n",config-&gt;getParseErrorValue().ascii());
        return 1;
    }
    return (0);
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulateTouchscreens::SaXManipulateTouchscreens</function> ( SaXImport* in, int ptr ) : SaXManipulatePointers (in,ptr)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateTouchscreens::isTouchpanel</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateTouchscreens::getPanelList</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateTouchscreens::setTouchPanel</function> (const QString&amp; group)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>excCDBRecordNotFound</function> ( driver )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
