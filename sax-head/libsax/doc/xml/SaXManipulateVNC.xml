<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulateVNC">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulateVNC</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulateVNC</refname>
<refpurpose>Set of VNC configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXManipulateCard</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
	<itemizedlist>
	<listitem><para>
		<function>SaXManipulateVNC</function> ( SaXImport*, SaXImport*, SaXImport*, SaXImport*, SaXImport*, int = 0 ); 
	</para></listitem>
	<listitem><para>
		void <function>addVNCKeyboard</function>    ( void )
	</para></listitem>
	<listitem><para>
		void <function>addVNCMouse</function>       ( void )
	</para></listitem>
	<listitem><para>
		void <function>deleteVNCMouse</function>    ( void )
	</para></listitem>
	<listitem><para>
		void <function>deleteVNCKeyboard</function> ( void )
	</para></listitem>
	<listitem><para>
		void <function>enableVNC</function>   ( void )
	</para></listitem>
	<listitem><para>
		void <function>disableVNC</function>  ( void )
	</para></listitem>
	<listitem><para>
		void <function>setPassword</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>enablePasswordProtection</function>  ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>disablePasswordProtection</function> ( void )
	</para></listitem>
	<listitem><para>
		void <function>enableHTTPAccess</function>  ( int = 5800 )
	</para></listitem>
	<listitem><para>
		void <function>disableHTTPAccess</function> ( void )
	</para></listitem>
	<listitem><para>
		void <function>allowMultipleConnections</function> ( bool = true )
	</para></listitem>
	<listitem><para>
		bool <function>VNCEnabled</function>           ( void )
	</para></listitem>
	<listitem><para>
		bool <function>HTTPAccessEnabled</function>    ( void )
	</para></listitem>
	<listitem><para>
		bool <function>multiConnectEnabled</function>  ( void )
	</para></listitem>
	<listitem><para>
		bool <function>pwdProtectionEnabled</function> ( void )
	</para></listitem>
</itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The VNC manipulator requires five import objects (Card,Pointers,Keyboard,
Layout and Path) to become created. Once created the manipulator object
can enable/disable the exporting of the display via VNC protocol. The
following example demonstrate how to enable/disable VNC for the current
configuration:
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

int main (void) {
    SaXException().setDebug (true);
    QDict&lt;SaXImport&gt; section;
    int importID[] = {
        SAX_CARD,
        SAX_POINTERS,
        SAX_KEYBOARD,
        SAX_LAYOUT,
        SAX_PATH
    };
    printf ("Importing data...\n");
    SaXConfig* config = new SaXConfig;
    for (int id=0; id&lt;5; id++) {
        SaXImport* import = new SaXImport ( importID[id] );
        import -&gt; setSource ( SAX_SYSTEM_CONFIG );
        import -&gt; doImport();
        config -&gt; addImport (import);
        section.insert (
            import-&gt;getSectionName(),import
        );
    }
    printf ("Exporting display for VNC access...\n");
    SaXManipulateVNC mVNC (
        section["Card"],section["Pointers"],section["Keyboard"],
        section["Layout"],section["Path"]
    );
    if (! mVNC.VNCEnabled()) {
        mVNC.enableVNC();
        mVNC.addVNCKeyboard();
        mVNC.addVNCMouse();
    }
    printf ("writing configuration\n");
    config -&gt; setMode (SAX_MERGE);
    if ( ! config -&gt; createConfiguration() ) {
        printf ("%s\n",config-&gt;errorString().ascii());
        printf ("%s\n",config-&gt;getParseErrorValue().ascii());
        return 1;
    }
    return (0);
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulateVNC::SaXManipulateVNC</function> ( SaXImport* card,SaXImport* pointer,SaXImport* kbd,SaXImport* layout,SaXImport* path,int id) : SaXManipulateCard (card,id)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::enableVNC</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::disableVNC</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::setPassword</function> (const QString&amp; pwd)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::enablePasswordProtection</function> (const QString&amp; pwd)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::disablePasswordProtection</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::enableHTTPAccess</function> (int port)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::disableHTTPAccess</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::allowMultipleConnections</function> (bool allow)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::addVNCKeyboard</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::addVNCMouse</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::deleteVNCMouse</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateVNC::deleteVNCKeyboard</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateVNC::VNCEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateVNC::HTTPAccessEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateVNC::multiConnectEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateVNC::pwdProtectionEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>excLayoutImportBindFailed</function> ( id )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excProcessFailed</function></term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
