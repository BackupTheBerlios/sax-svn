<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulateCard">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulateCard</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulateCard</refname>
<refpurpose>Set of Graphics-Card configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXException</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
	<itemizedlist>
	<listitem><para>
		<function>SaXManipulateCard</function> ( SaXImport*, int = 0 )
	</para></listitem>
	<listitem><para>
		void <function>setCardDriver</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>setCardOption</function> ( const QString&amp; , const QString&amp; = 0 )
	</para></listitem>
	<listitem><para>
		void <function>addCardOption</function> ( const QString&amp; , const QString&amp; = 0 )
	</para></listitem>
	<listitem><para>
		void <function>removeCardOption</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>setBusID</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>setScreenID</function> ( int )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getCardDrivers</function> ( void )
	</para></listitem>
	<listitem><para>
		QDict&lt;QString&gt; <function>getCardOptions</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		QDict&lt;QString&gt; <function>getOptions</function> ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getCardName</function> ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getBusID</function>    ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getScreenID</function> ( void )
	</para></listitem>
	<listitem><para>
		bool <function>selectCard</function> ( int )
	</para></listitem>
	</itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The card manipulator requires one import object (Card) to become
created. Once created the manipulator object is able to get/set hardware
related information like graphics card driver or options to use
with this driver. The following example shows how to use the card
manipulator to force setting up the PanelSize on a radeon based
NoteBook which reports the wrong size in its DDC record.
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

int main (void) {
    SaXException().setDebug (true);
    QDict&lt;SaXImport&gt; section;

    printf ("Importing data...\n");
    SaXConfig* config = new SaXConfig;
    SaXImport* import = new SaXImport ( SAX_CARD );
    import -&gt; setSource ( SAX_SYSTEM_CONFIG );
    import -&gt; doImport();
    config -&gt; addImport (import);
    section.insert (
        import-&gt;getSectionName(),import
    );
    printf ("Overwrite PanelSize option...\n");
    SaXManipulateCard mCard (
        section["Card"]
    );
    if (mCard.selectCard (0)) {
        mCard.addCardOption ("PanelSize","1280x1024");
    }
    printf ("Writing configuration\n");
    config -&gt; setMode (SAX_MERGE);
    if ( ! config -&gt; createConfiguration() ) {
        printf ("%s\n",config-&gt;errorString().ascii());
        printf ("%s\n",config-&gt;getParseErrorValue().ascii());
        return 1;
    }
    return 0;
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulateCard::SaXManipulateCard</function> (SaXImport* in, int card)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateCard::selectCard</function> (int card)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::setCardDriver</function> (const QString&amp; driver )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::setCardOption</function> ( const QString&amp; keyword, const QString&amp; value )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::addCardOption</function> ( const QString&amp; keyword, const QString&amp; value )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::removeCardOption</function> (const QString&amp; value)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::setBusID</function>  (const QString&amp; busid)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateCard::setScreenID</function> (int screen)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateCard::getCardName</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateCard::getBusID</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateCard::getScreenID</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QDict&lt;QString&gt; <function>SaXManipulateCard::getOptions</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateCard::getCardDrivers</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QDict&lt;QString&gt; <function>SaXManipulateCard::getCardOptions</function> ( const QString&amp; driver )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term>excNullPointerArgument</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excCardImportBindFailed</function> ( id )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excCDBRecordNotFound</function> ( driver )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>


