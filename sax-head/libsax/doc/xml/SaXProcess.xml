<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
	"-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXProcess">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::Process</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXProcess</refname>
<refpurpose>Abstraction of the libsax process layer</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXStorage</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
    <itemizedlist>
	<listitem><para>
		<function>SaXProcess</function> ( void )
    </para></listitem>
    <listitem><para>
		void <function>start</function> ( QList&lt;char&gt;, int = SAX_ISAX )
    </para></listitem>
    <listitem><para>
		void <function>start</function> ( int )
    </para></listitem>
       </itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# Private Members...
#=============================================
-->
<refsect2><title>Private Members</title>
<para>
    <itemizedlist>
    <listitem><para>
		void <function>storeData</function>     ( void )
    </para></listitem>
    <listitem><para>
		void <function>storeDataSysp</function> ( void )
    </para></listitem>
    <listitem><para>
		void <function>storeDataCDB</function>  ( int  )
    </para></listitem>
    <listitem><para>
		void <function>storeDataSYS</function>  ( int  )
    </para></listitem>
    </itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The SaXProcess class provides an interface to call external programs
including output parsing. Concerning libsax only the output formats
of CDB files <function>isax</function> and <function>sysp</function>
calls are handled. The internal structure is based on SaXStorage objects.
All access and modifaction members are provided by the SaXStorage class.
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

QList&lt;char&gt; sysp_options;
sysp_options.append ( "-q" );
sysp_options.append ( "server" );
SaXProcess* proc = new SaXProcess ();
proc -&gt; start ( sysp_options , SAX_SYSP );
if (proc -&gt; getItemPointer("VID")) {
    printf ("%s\n",proc -&gt; getItemPointer("VID")-&gt;ascii());
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXProcess::SaXProcess</function> ( void )</term>
<listitem><para>
Create a new SaXProcess object
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::start</function> ( QList&lt;char&gt; args, int prog )</term>
<listitem><para>
Create a new SaXProcess object specifying the program to call and the
options for the call
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::start</function> ( int fileID )</term>
<listitem><para>
This start method will check if the given fileID
points to a valid file and call the appropriate
evaluation method to the store the data provided by the file
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::storeDataCDB</function> (int fileID)</term>
<listitem><para>
This private member is called to store information if the format of
the file referenced by <filename>fileID</filename> is based on the CDB export format
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::storeDataSYS</function> (int fileID)</term>
<listitem><para>
This private member is called to store information if the format of
the file referenced by <filename>fileID</filename> is based on the SaX2 internal
system data format
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::storeDataSysp</function> (void)</term>
<listitem><para>
This private member is called to store information if the output is
based on the SYSP format
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXProcess::storeData</function> (void)</term>
<listitem><para>
This private member is called to store information if the output is
based on the ISaX format
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>saxProcessFailed</function></term>
<listitem><para>
The process did not start because the program does not exist or the
executive permissions did not allow to start the process
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxFileOpenFailed</function></term>
<listitem><para>
The file reference to either a CDB or SaX system file couldn't be
opened
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
