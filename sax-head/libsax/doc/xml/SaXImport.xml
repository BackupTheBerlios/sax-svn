<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
	"-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXImport">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::Import</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXImport</refname>
<refpurpose>Abstraction of the ISaX interface layer</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXProcess</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
    <itemizedlist>
    <listitem><para>
		<function>SaXImport</function> ( int )
    </para></listitem>
    <listitem><para>
		void <function>doImport</function>  ( void )
    </para></listitem>
    <listitem><para>
		void <function>setSource</function> ( int  )
    </para></listitem>
    <listitem><para>
		int <function>getSectionID</function> ( void )
    </para></listitem>
    </itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The SaXImport class provides an abstraction for the ISaX interface
layer. The class inherits from SaXProcess which itself inherits from
SaXStorage. the data is obtained from an <filename>isax</filename> process call and
is stored into the protected area of a storage object. ISaX is the
interface between the engine which is responsible to create or modify
X11 configurations and the <filename>client</filename> side which normaly builds a
GUI for user interactions concerning X11 issues. The ISaX interface is
used for input and output data and is therefore the major structure to
read, create and modify X11 configurations. The SaXImport class will cover
only the first part which is to read from the interface. A SaXImport object
will be constructed with one parameter which defines the section to import.
there are seven ISAX sections available:
</para>
<refsect2><title>ISAX Sections</title>
<variablelist>
<varlistentry>
<term><function>SAX_CARD</function></term>
<listitem><para>
Provides information about the graphics card. This includes everything
refering to the device section of the X11 configuration file.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_DESKTOP</function></term>
<listitem><para>
Provides information about the monitor the resolution, colordepth, etc. All of
these surrounds the desktop and refers to the sections Monitor, Modes and
Screen of the X11 configuration file.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_POINTERS</function></term>
<listitem><para>
Provides information about all input devices except the core keyboard. This
normally includes information about the core pointer, touchpads, tablets, etc.
The information refers to the approprate InputDevice sections of the
X11 configuration file.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_KEYBOARD</function></term>
<listitem><para>
Provides information about the core keyboard. This information refers to the
approprate InputDevice section of the X11 configuration file.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_LAYOUT</function></term>
<listitem><para>
Provides information about the screen layout. The so called ServerLayout section
of the X11 configuration file defines how things fit together. This
includes information about mulithead arrangement as well as information
about the layout of input devices.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_PATH</function></term>
<listitem><para>
Provides information about FontPaths, server modules and flags. This
data refers to the sections Files Module and ServerFlags of the
X11 configuration file
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>SAX_EXTENSIONS</function></term>
<listitem><para>
Provides information about the X11 extensions. The Extensions section
of the X11 configuration file is used to enable disable external
extensions.
</para></listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

SaXImport* card = new SaXImport (SAX_CARD);
card -&gt; doImport();

if (card -&gt; getItemPointer("Vendor")) {
    printf ("%s\n",card -&gt; getItemPointer("Vendor")-&gt;ascii());
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXImport::SaXImport</function> (int section)</term>
<listitem><para>
Constructs an Import of the given <filename>section</filename>. The available section
ID's are explained in the DESCRIPTION field
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXImport::doImport</function> (void)</term>
<listitem><para>
Start the import. A SaXProcess object will call isax to obtain
the requested information.
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXImport::setSource</function> (int s)</term>
<listitem><para>
Sets the <function>source</function> of the import. There are two possible sources:
	<variablelist>
	<varlistentry>
	<term><function>SAX_AUTO_PROBE</function></term>
	<listitem><para>
	This will include the data from the auto detection information. SaX2
	will create a cache including its auto configuration suggestion. This
	data normally is the basis for any new configuration. It may be
	necessary to initialize this cache first. See the <function>SaX::Init</function>
	manual page for details
	</para></listitem>
	</varlistentry>
	<varlistentry>
    <term><function>SAX_SYSTEM_CONFIG</function></term>
    <listitem><para>
    This will include the data from the currently used configuration.
	The file <filename>/etc/X11/xorg.conf</filename> will be used for the import.
    </para></listitem>
    </varlistentry>
	</variablelist>
</para></listitem>
</varlistentry>
<varlistentry>
<term>int <function>SaXImport::getSectionID</function> (void)</term>
<listitem><para>
Returns the ISAX section ID refering to this Import. This is one
of the ID's explained in the DESCRIPTION field
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>saxProcessFailed</function></term>
<listitem><para>
The process to call the isax failed. This is fatal because no
information will be available.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxImportSectionFailed</function></term>
<listitem><para>
If the <filename>section</filename> parameter to construct a SaXImport object is
not known a <function>saxImportSectionFailed</function> exception will be thrown. The
section parameter has to be one of the ID's exlpained in the
DESCRIPTION field. An eventual called doImport method will fail
as well
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>


<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
