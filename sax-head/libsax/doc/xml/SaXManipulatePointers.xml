<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulatePointers">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulatePointers</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulatePointers</refname>
<refpurpose>Abstract set of pointer configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXException</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
	<itemizedlist>
	<listitem><para>
		<function>SaXManipulatePointers</function> ( SaXImport*, int = 1 )
	</para></listitem>
	<listitem><para>
		virtual void <function>setDriver</function>    ( const QString&amp; ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>setDevice</function>    ( const QString&amp; ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>setProtocol</function>  ( const QString&amp; ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>setNamePair</function>  ( const QString&amp; , const QString&amp; ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>setOption</function>    ( const QString&amp; , const QString&amp; = 0 ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>addOption</function>    ( const QString&amp; , const QString&amp; = 0 ) =0
	</para></listitem>
	<listitem><para>
		virtual void <function>deleteOption</function> ( const QString&amp; ) =0
	</para></listitem>
	<listitem><para>
		virtual QString <function>getDevice</function> ( void ) =0
	</para></listitem>
	<listitem><para>
		virtual QString <function>getDriver</function> ( void ) =0
	</para></listitem>
	<listitem><para>
		virtual QString <function>getProtocol</function> ( void ) =0
	</para></listitem>
	<listitem><para>
		virtual QDict&lt;QString&gt; <function>getOptions</function> ( void ) =0
	</para></listitem>
	<listitem><para>
		virtual bool <function>selectPointer</function> ( int ) =0
	</para></listitem>
	</itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
...
</para>
</refsect1>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulatePointers::SaXManipulatePointers</function> (SaXImport* in, int ptr)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulatePointers::selectPointer</function> (int ptr)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::setDriver</function> (const QString&amp; driver)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::setDevice</function> (const QString&amp; device)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::setProtocol</function> (const QString&amp; protocol)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::setNamePair</function> ( const QString&amp; vendor , const QString&amp; name )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::setOption</function> ( const QString&amp; keyword, const QString&amp; value )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::addOption</function> ( const QString&amp; keyword, const QString&amp; value )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulatePointers::deleteOption</function> (const QString&amp; value)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QDict&lt;QString&gt; <function>SaXManipulatePointers::getOptions</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulatePointers::getDevice</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulatePointers::getDriver</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulatePointers::getProtocol</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>excNullPointerArgument</function></term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excPointerImportBindFailed</function> ( id )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>


<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
