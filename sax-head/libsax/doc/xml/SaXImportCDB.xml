<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
	"-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXImportCDB">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ImportCDB</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXImportCDB</refname>
<refpurpose>Abstraction of the CDB interface layer</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXProcess</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
    <itemizedlist>
	    <listitem><para>
		<function>SaXImportCDB</function> ( int )
    </para></listitem>
    <listitem><para>
		void <function>doImport</function> ( void )
    </para></listitem>
    </itemizedlist>
</para>
</refsect2>


<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The SaXImportCDB class provides an abstraction for the CDB interface
layer. The class inherits from SaXProcess which itself inherits from
SaXStorage. the data is obtained from files which are created as
export from a database and stored as part of the SaX2 engine. The CDB
(Component Data-Base) provides high level information about hardware.
the SaX2 CDB interface is a read only interface and according to this
the class SaXImportCDB can only be used to obtain high level information
about a various field of X11 related hardware. A SaXImportCDB object will
be constructed with one parameter which defines the file ID to become
imported. there are six CDB file ID's available:
</para>
<refsect2><title>CDB file ID's</title>
<variablelist>
<varlistentry>
<term><function>CDB_CARDS</function></term>
<listitem><para>
Provides information about supported graphics cards refering to the
file <filename>cdb/Cards</filename>. Each data record contains information about the
driver module, profiles and extensions for the use in 2D and 3D
environments. The information is usefull in combination with an ISAX
imported <function>SaXImport(SAX_CARD)</function> object
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>CDB_MONITORS</function></term>
<listitem><para>
Provides information about supported monitors refering to the file
<filename>cdb/Monitors</filename>. Each data record contains information about the
sync range, profile, DDC ID, Modelines and options. The information is usefull in
combination with an ISAX imported <function>SaXImport(SAX_DESKTOP)</function> object
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>CDB_TABLETS</function></term>
<listitem><para>
Provides information about supported tablets refering to the file
<filename>cdb/Tablets</filename>. Each data record contains information about the
various options to configure the core tablet without peripherals.
The information is usefull in combination with an ISAX imported
<function>SaXImport(SAX_POINTERS)</function> object
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>CDB_PENS</function></term>
<listitem><para>
Provides information about supported tablet pens refering to the
file <filename>cdb/Pens</filename>. Each data record contains the various options to
configure the pen. The information is usefull in combination with an ISAX imported
<function>SaXImport(SAX_POINTERS)</function> object
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>CDB_POINTERS</function></term>
<listitem><para>
Provides information about the supported mice refering to the file
<filename>cdb/Pointers</filename>. Each data record contains at least information about
the protocol and device but there are several special devices which need
lots of additional options which are part of the data record too.
The information is usefull in combination with an ISAX imported
<function>SaXImport(SAX_POINTERS)</function> object
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>CDB_TOUCHERS</function></term>
<listitem><para>
Provides information about the supported touch screens refering to the
file <filename>cdb/Touchscreens</filename>. Each data record contains information about the
various options to configure a touch screen.
The information is usefull in combination with an ISAX imported
<function>SaXImport(SAX_POINTERS)</function> object
</para></listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

SaXImportCDB* cards = new SaXImportCDB (CDB_CARDS);
cards -&gt; doImport();

QDict&lt; QDict&lt;QString&gt; &gt; data = cards -&gt; getTablePointerCDB ();
QDictIterator&lt; QDict&lt;QString&gt; &gt; n (data);
for (; n.current(); ++n) {
    printf ("%s\n",n.currentKey().ascii());
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXImportCDB::SaXImportCDB</function> (int fileID)</term>
<listitem><para>
Constructs an Import of the given <filename>fileID</filename>. The available file
ID's are explained in the DESCRIPTION field
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXImportCDB::doImport</function> (void)</term>
<listitem><para>
Start the import. The appropriate CDB file will be opened and
parsed. The information is stored in the protected area of the
SaXStorage class
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>saxCDBFileFailed</function></term>
<listitem><para>
The given file ID cannot be resolved into a real file name.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxFileOpenFailed (int errno)</function></term>
<listitem><para>
The file refering to the given file ID cannot be opened. The
error code of the open call is available with the <filename>errno</filename>
parameter.
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>


<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
