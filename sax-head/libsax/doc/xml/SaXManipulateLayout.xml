<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulateLayout">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulateLayout</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulateLayout</refname>
<refpurpose>Set of Layout configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXException</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
	<itemizedlist>
	<listitem><para>
		<function>SaXManipulateLayout</function> ( SaXImport*,SaXImport* )
	</para></listitem>
	<listitem><para>
		void <function>setMultiheadMode</function> ( int )
	</para></listitem>
	<listitem><para>
		bool <function>setLayout</function> ( int, int, int, int, int )
	</para></listitem>
	<listitem><para>
		int <function>getMultiheadMode</function> ( void )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getLayout</function> ( int )
	</para></listitem>
	</itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The layout manipulator requires two import objects (Layout and Card)
to become created. Once created the manipulator object is able to get/set
layout related information. The layout specifies the relationship 
and cooperation between the screens. The following example demonstrate
how to check for the multihead mode currently used:
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

int main (void) {
    SaXException().setDebug (true);
    QDict&lt;SaXImport&gt; section;
    int importID[] = {
        SAX_LAYOUT,
        SAX_CARD
    };
    printf ("Importing data...\n");
    SaXConfig* config = new SaXConfig;
    for (int id=0; id&lt;2; id++) {
        SaXImport* import = new SaXImport ( importID[id] );
        import -&gt; setSource ( SAX_SYSTEM_CONFIG );
        import -&gt; doImport();
        config -&gt; addImport (import);
        section.insert (
            import-&gt;getSectionName(),import
        );
    }
    printf ("checking multihead mode... ");
    SaXManipulateLayout layout (
        section["Layout"],section["Card"]
    );
    switch (layout.getMultiheadMode()) {
        case SAX_SINGLE_HEAD:
            printf ("single head mode\n");
        break;
        case SAX_XINERAMA:
            printf ("Xorg Xinerama mode\n");
        break;
        case SAX_TRADITIONAL:
            printf ("Xorg traditional multihead\n");
        break;
        case SAX_CLONE:
            printf ("Xorg cloned multihead\n");
        break;
        case SAX_TWINVIEW:
            printf ("Nvidia Twinview mode\n");
        break;
        case SAX_TWINVIEW_CLONE:
            printf ("Nvidia Twinview clone mode\n");
        break;
        default:
            printf ("unknown mode\n");
        break;
    }
    return (0);
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulateLayout::SaXManipulateLayout</function> (SaXImport* layout,SaXImport* card )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateLayout::setMultiheadMode</function> ( int mode )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateLayout::setLayout</function> ( int screen, int left, int right, int top, int bottom )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>int <function>SaXManipulateLayout::getMultiheadMode</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateLayout::getLayout</function> ( int screen )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>excNullPointerArgument</function></term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excLayoutImportBindFailed</function> ( id )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excCardImportBindFailed</function> ( id )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excInvalidArgument</function> ( argument )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>excGetScreenLayoutFailed</function> ( screenID )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
