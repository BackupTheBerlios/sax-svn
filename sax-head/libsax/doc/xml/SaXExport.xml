<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
	"-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXExport">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::Export</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXExport</refname>
<refpurpose>Abstraction of the ISaX apidata preparation stage</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXException</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
    <itemizedlist>
    <listitem><para>
		<function>SaXExport</function> ( SaXImport*,SaXException* )
    </para></listitem>
    <listitem><para>
		bool <function>doExport</function> (void)
    </para></listitem>
    </itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The SaXExport class provides an abstraction for the ISaX apidata
file. Using ISaX to create or modify X11 configurations requires
a special input file called <filename>apidata</filename>. The file is automatically build
when all needed sections are available. Each section itself is a file
corresponding to a SaXExport object. A SaXExport object requires
a valid SaXImport object for initializing. After the export object
has been created the programmer simply exports the data by calling
<function>doExport</function>. There is no need to take care about the files created
implicitely. All files refering the library will be created in
<filename>/var/lib/sax</filename>
</para>
</refsect1>

<!--
#=============================================
# EXAMPLES...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

SaXImport* import = new SaXImport (SAX_DESKTOP);
SaXExport* export = new SaXExport (import,NULL);
import -&gt; doImport();
export -&gt; doExport();
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXExport::SaXExport</function> (SaXImport* import,SaXException* to)</term>
<listitem><para>
Create a SaXExport object initialized with the SaXImport
object named <filename>import</filename>. The second parameter
defines the object the exceptions are send to. Because of the fact that
the SaXConfig object will implicitly create SaXExport objects it is
needed to transfer exceptions from the SaXExport are into the SaXConfig
area to be able to access them easily
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXExport::doExport</function> (void)</term>
<listitem><para>
Export the data to the appropriate sub-file used to
build the later apidata file
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# POSSIBLE EXCEPTIONS...
#=============================================
-->
<refsect1><title>POSSIBLE EXCEPTIONS</title>
<variablelist>
<varlistentry>
<term><function>saxExportSectionFailed</function></term>
<listitem><para>
while creating a SaXExport object the given SaXImport
object has no valid SAX_* Identifier.
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxPermissionDenied</function></term>
<listitem><para>
<function>doExport()</function> wasn't able to create the needed file because
of file permission restrictions
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxFileOpenFailed ( int errno )</function></term>
<listitem><para>
<function>doExport()</function> wasn't able to open the export file for writing
</para></listitem>
</varlistentry>
<varlistentry>
<term><function>saxNoStorage ( int ID )</function></term>
<listitem><para>
<function>doExport()</function> wasn't able to create the export file because
there is no storage data available
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Sch√§fer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
