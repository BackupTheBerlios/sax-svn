<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC
    "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
>
<refentry id="SaXManipulateDesktop">

<!--
#=============================================
# Header settings...
#=============================================
-->
<refentryinfo><title>libsax class reference</title></refentryinfo>
<refentryinfo><date>January 2005</date></refentryinfo>
<refentryinfo><productname>libsax-4.8</productname></refentryinfo>
<refmeta>
<refentrytitle>SaX::ManipulateDesktop</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>
<refnamediv>
<refname>SaXManipulateDesktop</refname>
<refpurpose>Set of Desktop configuration methods</refpurpose>
</refnamediv>

<!--
#=============================================
# SYNOPSIS...
#=============================================
-->
<refsynopsisdiv>
<synopsis>
#include &lt;sax.h&gt;
</synopsis>
Inherits <filename>SaXException</filename>
</refsynopsisdiv>

<!--
#=============================================
# Public Members...
#=============================================
-->
<refsect2><title>Public Members</title>
<para>
	<itemizedlist>
	<listitem><para>
		<function>SaXManipulateDesktop</function> ( SaXImport*, SaXImport*, SaXImport*, int = 0 )
	</para></listitem>
	<listitem><para>
		void <function>calculateModelines</function> ( bool )
	</para></listitem>
	<listitem><para>
		void <function>setResolution</function> ( int,int,int )
	</para></listitem>
	<listitem><para>
		void <function>addResolution</function> ( int,int,int )
	</para></listitem>
	<listitem><para>
		void <function>deleteResolution</function> ( int,int,int )
	</para></listitem>
	<listitem><para>
		void <function>setVirtualResolution</function> ( int,int,int )
	</para></listitem>
	<listitem><para>
		void <function>deleteVirtualResolution</function> ( int )
	</para></listitem>
	<listitem><para>
		void <function>setColorDepth</function> ( int )
	</para></listitem>
	<listitem><para>
		bool <function>enable3D</function>  ( void )
	</para></listitem>
	<listitem><para>
		bool <function>disable3D</function> ( void )
	</para></listitem>
	<listitem><para>
		void <function>setDisplaySize</function> ( int,int )
	</para></listitem>
	<listitem><para>
		void <function>setHsyncRange</function> ( double,double )
	</para></listitem>
	<listitem><para>
		void <function>setVsyncRange</function> ( double,double )
	</para></listitem>
	<listitem><para>
		void <function>enableDPMS</function>  ( void )
	</para></listitem>
	<listitem><para>
		void <function>disableDPMS</function> ( void )
	</para></listitem>
	<listitem><para>
		void <function>setMonitorVendor</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>setMonitorName</function>   ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		void <function>setCDBMonitor</function> ( const QString&amp; )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getCDBMonitorList</function> ( void )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getResolutions</function> ( int  )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getDisplaySize</function> ( void )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getHsyncRange</function>  ( void )
	</para></listitem>
	<listitem><para>
		QList&lt;QString&gt; <function>getVsyncRange</function>  ( void )
	</para></listitem>
	<listitem><para>
		bool <function>is3DEnabled</function> ( void )
	</para></listitem>
	<listitem><para>
		bool <function>is3DCard</function>    ( void )
	</para></listitem>
	<listitem><para>
		bool <function>DPMSEnabled</function> ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getMonitorVendor</function> ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getMonitorName</function>   ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getColorDepth</function>    ( void )
	</para></listitem>
	<listitem><para>
		QString <function>getVirtualResolution</function> ( int  )
	</para></listitem>
	<listitem><para>
		bool <function>willCalculateModelines</function>  ( void )
	</para></listitem>
	<listitem><para>
		bool <function>selectDesktop</function> (int)
	</para></listitem>
	</itemizedlist>
</para>
</refsect2>

<!--
#=============================================
# DESCRIPTION...
#=============================================
-->
<refsect1><title>Description</title>
<para>
The desktop manipulator requires three import objects (Desktop,Card and Path)
to become created. Once created the manipulator object is able to get/set
desktop related information like resolutions color depth monitor specs or 3D.
The following example shows how to use the desktop manipulator for adding
a new standard resolution in 24 bit color depth:
</para>
</refsect1>

<!--
#=============================================
# EXAMPLE...
#=============================================
-->
<refsect2><title>Example</title>
<programlisting>
#include &lt;sax.h&gt;

int main (void) {
    SaXException().setDebug (true);
    QDict&lt;SaXImport&gt; section;
    int importID[] = {
        SAX_CARD,
        SAX_DESKTOP,
        SAX_PATH,
    };
    printf ("Importing data...\n");
    SaXConfig* config = new SaXConfig;
    for (int id=0; id&lt;3; id++) {
        SaXImport* import = new SaXImport ( importID[id] );
        import -&gt; setSource ( SAX_SYSTEM_CONFIG );
        import -&gt; doImport();
        config -&gt; addImport (import);
        section.insert (
            import-&gt;getSectionName(),import
        );
    }
    printf ("Setting up resolution...\n");
    SaXManipulateDesktop mDesktop (
        section["Desktop"],section["Card"],section["Path"]
    );
    if (mDesktop.selectDesktop (0)) {
        mDesktop.addResolution (24,1600,1200);
    }
    printf ("Writing configuration\n");
    config -&gt; setMode (SAX_MERGE);
    if ( ! config -&gt; createConfiguration() ) {
        printf ("%s\n",config-&gt;errorString().ascii());
        printf ("%s\n",config-&gt;getParseErrorValue().ascii());
        return 1;
    }
    return 0;
}
</programlisting>
</refsect2>

<!--
#=============================================
# MEMBER FUNCTION DOCUMENTATION...
#=============================================
-->
<refsect1><title>MEMBER FUNCTION DOCUMENTATION</title>
<variablelist>
<varlistentry>
<term><function>SaXManipulateDesktop::SaXManipulateDesktop</function> ( SaXImport* desktop, SaXImport* card , SaXImport* path, int desktopID )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::selectDesktop</function> (int desktop)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::calculateModelines</function> (bool calc)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setResolution</function> (int c,int x,int y)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::addResolution</function> (int c,int x,int y)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::deleteResolution</function> (int c,int x,int y)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setVirtualResolution</function> (int c,int x,int y)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::deleteVirtualResolution</function> (int c)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setColorDepth</function> (int c)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::is3DCard</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::enable3D</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::disable3D</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setDisplaySize</function> (int width,int height)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setHsyncRange</function> (double hsmin,double hsmax)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setVsyncRange</function> (double vsmin,double vsmax)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::enableDPMS</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::disableDPMS</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setMonitorVendor</function> (const QString&amp; vendor)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setMonitorName</function> (const QString&amp; name)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::is3DEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateDesktop::getResolutions</function> (int color)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateDesktop::getDisplaySize</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateDesktop::getHsyncRange</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateDesktop::getVsyncRange</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::DPMSEnabled</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateDesktop::getMonitorVendor</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateDesktop::getMonitorName</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateDesktop::getColorDepth</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>bool <function>SaXManipulateDesktop::willCalculateModelines</function> (void)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QString <function>SaXManipulateDesktop::getVirtualResolution</function> (int color)</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>void <function>SaXManipulateDesktop::setCDBMonitor</function> ( const QString&amp; group )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
<varlistentry>
<term>QList&lt;QString&gt; <function>SaXManipulateDesktop::getCDBMonitorList</function> ( void )</term>
<listitem><para>
TODO...
</para></listitem>
</varlistentry>
</variablelist>
</refsect1>

<!--
#=============================================
# COPYRIGHT...
#=============================================
-->
<refsect1><title>COPYRIGHT</title>
<para>
(C) Copyright 2000-2005 - SuSE GmbH, <ulink>http://www.suse.de</ulink>.
See the license file included in the distribution for a complete license
statement.
</para>
</refsect1>

<!--
#=============================================
# AUTHOR...
#=============================================
-->
<refsect1><title>AUTHOR</title>
<para>
Marcus Schäfer <email>ms@suse.de</email>
</para>
</refsect1>
</refentry>
